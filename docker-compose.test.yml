x-base: &base
  build:
    context: .
    dockerfile: ./Dockerfile
  environment:
    - DATABASE_HOST=postgres
    - DATABASE_PORT=5432
    - DATABASE_USERNAME=postgres
    - DATABASE_PASSWORD=postgres
    - RAILS_ENV=test
    - CI=true
    - RAILS_LOG_TO_STDOUT=true
    # Chrome/Cuprite configuration
    - CHROME_URL=http://chrome:3333
  depends_on:
    chrome:
      condition: service_started
    postgres:
      condition: service_healthy
  # Chrome needs additional capabilities in Docker

services:
  app:
    <<: *base
    ports:
      - '3000:3000'
    healthcheck:
      test: curl --fail http://0.0.0.0:3000/ready || exit 1
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:17
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
  chrome:
    image: browserless/chrome:1.31-chrome-stable
    ports:
      - 3333:3333
    # Mount application source code to support file uploading
    # (otherwise Chrome won't be able to find files).
    # NOTE: Make sure you use absolute paths in `#attach_file`.
    volumes:
      - .:/app:cached # change it for your rails' container directory
    environment:
      # By default, it uses 3000, which is typically used by Rails.
      PORT: 3333
      # Set connection timeout to avoid timeout exception during debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000

volumes:
  postgres:
  bundle:
  rails_cache:
  node_modules:
